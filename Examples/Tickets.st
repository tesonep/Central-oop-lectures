TestCase subclass: #TicketTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Tickets'!!TicketTest methodsFor: 'tests' stamp: '9/20/2024 12:52'!testThreeProducts	| t i1 i2 i3 total |		t := Ticket new.	i1 := TicketItem new.	i1 setPrix: 10.	i1 setQty: 2.		i2 := TicketItem new.	i2 setPrix: 7.	i2 setQty: 3.		i3 := TicketItem new.	i3 setPrix: 0.	i3 setQty: 0.	t setProduct1: i1. 	t setProduct2: i2.	t setProduct3: i3.		total := t getTotal.	self assert: total equals: 41! !Object subclass: #Ticket	instanceVariableNames: 'p1 p2 p3'	classVariableNames: ''	package: 'Tickets'!!Ticket commentStamp: 'Anonymous 9/17/2024 15:20' prior: 0!Our great implementation of Ticket!!Ticket methodsFor: 'as yet unclassified' stamp: '9/17/2024 15:23'!getTotal	^ p1 getTotal + p2 getTotal + p3 getTotal ! !!Ticket methodsFor: 'as yet unclassified' stamp: '9/17/2024 15:24'!setProduct1: aProduct	p1 := aProduct ! !!Ticket methodsFor: 'as yet unclassified' stamp: '9/17/2024 15:24'!setProduct2: aProduct	p2 := aProduct ! !!Ticket methodsFor: 'as yet unclassified' stamp: '9/17/2024 15:24'!setProduct3: aProduct	p3 := aProduct ! !Object subclass: #TicketItem	instanceVariableNames: 'prix qty'	classVariableNames: ''	package: 'Tickets'!!TicketItem methodsFor: 'initialization' stamp: '9/17/2024 15:26'!setPrix: aValue	prix := aValue! !!TicketItem methodsFor: 'initialization' stamp: '9/17/2024 15:26'!setQty: aValue	qty := aValue! !!TicketItem methodsFor: 'initialization' stamp: '9/17/2024 15:26'!getTotal	^ prix * qty! !